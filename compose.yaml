services:

  candlestick-service-migrate:
    build: .
    image: candlestick-app
    command: sh -c "cd ./db_schema && alembic upgrade head"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - candlenet

  candlestick-service-rest-api:
    image: candlestick-app
    command: "gunicorn -w 4 -k uvicorn.workers.UvicornWorker app.io.rest_api.main:app -b 0.0.0.0:8000"
    expose:
      - "8000"
    env_file:
      - ./.env
    depends_on:
      candlestick-service-migrate:
        condition: service_completed_successfully
    networks:
      - candlenet
      - nginx-net

  candlestick-service-cli:
    image: candlestick-app
    command: "sh"
    env_file:
      - ./.env
    depends_on:
      candlestick-service-migrate:
        condition: service_completed_successfully
    networks:
      - candlenet
      - nginx-net

  candlestick-service-task-scheduler:
    image: candlestick-app
    command: "taskiq scheduler app.tasks:scheduler"
    env_file:
      - ./.env
    depends_on:
      candlestick-service-migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    networks:
      - candlenet

  candlestick-service-task-worker:
    image: candlestick-app
    command: "taskiq worker app.tasks:broker"
    env_file:
      - ./.env
    depends_on:
      candlestick-service-migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    networks:
      - candlenet

  redis:
    image: redis:7.2
    expose:
      - "6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "ping" ]
      interval: 5s
      retries: 10
      start_period: 10s
      timeout: 5s
    networks:
      - candlenet

  db:
    image: postgres:16
    env_file:
      - ./.env
    expose:
      - "5432"
    volumes:
      - ./db-data/:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB}", "-h", "db", "-p", "5432", "-U", "${POSTGRES_USER}" ]
      interval: 1s
      timeout: 5s
      retries: 100
    networks:
      - candlenet

  nginx:
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
    depends_on:
      candlestick-service-rest-api:
        condition: service_started
    ports:
      - "80:80"
    networks:
      - nginx-net

networks:
  nginx-net:
  candlenet:
